package dao.dto.hibernate;
// Generated 17/06/2018 01:48:57 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Menu generated by hbm2java
 */
@Entity
@Table(name="MENU"
    ,schema="dbo"
    ,catalog="BDBRUCE"
)
public class Menu  implements java.io.Serializable {


     private int idMenu;
     private String icono;
     private String descripcion;
     private boolean situacion;
     private Set<Acceso> accesos = new HashSet<Acceso>(0);
     private Set<Submenu> submenus = new HashSet<Submenu>(0);

    public Menu() {
    }

	
    public Menu(int idMenu, boolean situacion) {
        this.idMenu = idMenu;
        this.situacion = situacion;
    }
    public Menu(int idMenu, String icono, String descripcion, boolean situacion, Set<Acceso> accesos, Set<Submenu> submenus) {
       this.idMenu = idMenu;
       this.icono = icono;
       this.descripcion = descripcion;
       this.situacion = situacion;
       this.accesos = accesos;
       this.submenus = submenus;
    }
   
     @Id 

    
    @Column(name="ID_MENU", unique=true, nullable=false)
    public int getIdMenu() {
        return this.idMenu;
    }
    
    public void setIdMenu(int idMenu) {
        this.idMenu = idMenu;
    }

    
    @Column(name="ICONO", length=25)
    public String getIcono() {
        return this.icono;
    }
    
    public void setIcono(String icono) {
        this.icono = icono;
    }

    
    @Column(name="DESCRIPCION", length=25)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    
    @Column(name="SITUACION", nullable=false)
    public boolean isSituacion() {
        return this.situacion;
    }
    
    public void setSituacion(boolean situacion) {
        this.situacion = situacion;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="menu")
    public Set<Acceso> getAccesos() {
        return this.accesos;
    }
    
    public void setAccesos(Set<Acceso> accesos) {
        this.accesos = accesos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="menu")
    public Set<Submenu> getSubmenus() {
        return this.submenus;
    }
    
    public void setSubmenus(Set<Submenu> submenus) {
        this.submenus = submenus;
    }




}


